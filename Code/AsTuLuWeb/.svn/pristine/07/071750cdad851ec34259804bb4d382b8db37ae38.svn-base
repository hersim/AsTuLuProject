--USE Astulus;
--GO

/* First step: drop constraint*/
ALTER TABLE Book DROP CONSTRAINT FKBookEditor;
ALTER TABLE Book DROP CONSTRAINT FKBookCategory;
GO

ALTER TABLE Review DROP CONSTRAINT FKReviewBook;
ALTER TABLE Review DROP CONSTRAINT FKReviewUser;
GO

ALTER TABLE Comment DROP CONSTRAINT FKCommentUser;
ALTER TABLE Comment DROP CONSTRAINT FKCommentReview;
GO

ALTER TABLE SubCategory DROP CONSTRAINT FKSubCategoryCategory;
GO

--ALTER TABLE UserAccount DROP CONSTRAINT FKAccountUser;
--GO

ALTER TABLE BookByUser DROP CONSTRAINT FKBookToUser;
--ALTER TABLE BookByUser DROP CONSTRAINT FKUserToBook;
GO

/* Second step: drop tables*/
DROP TABLE Book;
DROP TABLE Editor;
DROP TABLE Category;
DROP TABLE SubCategory;
DROP TABLE Review;
DROP TABLE Comment;
DROP TABLE UserAccount;
DROP TABLE BookByUser;
GO

/* Third step: create tables*/
CREATE TABLE Book
(
	BookID INT not null IDENTITY,
	BookName VARCHAR(200) not null,
	PrimaryAuthor VARCHAR(150) not null,
	SecondAuthor VARCHAR(150),
	ThirdAuthor VARCHAR(150),
	BookISBN VARCHAR(70),
	BookNumber INT,
	BookCollection VARCHAR(100),
	BookSerie VARCHAR(100),
	BookLanguage INT not null,
	PageNumber INT not null,
	PublishedYear INT,
	DateAdded Date not null default GETDATE(),
	Score Int Not null default 0,
	CategoryID INT not null,
	EditorID INT not null,
	TimesConsulted INT not null default 0,
	IsTranslated bit,
	BookStatus INT not null default 0,
	UserID INT,
);
GO

CREATE TABLE BookByUser
(
	BookByUserID INT not null IDENTITY,
	BookID INT not null,
	UserID INT not null,
	LikeState INT,
	DateCreated DATE not null default GETDATE(),
	DateModified DATE
)

CREATE TABLE Editor
(
	EditorID INT not null IDENTITY,
	EditorName VARCHAR(200) not null,
	DateCreated DateTime,
	EditorScore Int not null default 0,
	DateAdded Date not null default GETDATE(),
	TimeEditorConsulted int not null default 0
);
GO

CREATE TABLE Category
(
	CategoryID Int not null identity,
	CategoryName Varchar(100) not null,
	TimesCategoryConsulted int not null default 0,
	DateAdded Date not null default GETDATE(),
);
GO

CREATE TABLE SubCategory
(
	SubCategoryID Int not null identity,
	SubCategoryName Varchar(100) not null,
	CategoryID int not null,
	TimesSubCatConsulted int not null default 0,
	DateAdded Date not null default GETDATE(),
);
GO

CREATE TABLE Review
(
	ReviewID Int not null identity,
	ReviewText Varchar(300) not null,
	AccountID Int not null,
	BookID Int not null,
	ReviewScore Int not null default 0,
	DateAdded Date not null default GETDATE(),
);
GO

CREATE TABLE UserAccount
(
	AccountID Int not null identity,
	DateCreated DateTime not null default GetDate(),
	DateLastLog DateTime,
	AccountScore Int not null default 0,
	Reputation Varchar(50),
	UserID int,
);

CREATE TABLE Comment
(
	CommentID Int not null identity,
	CommentText Varchar(140) not null,
	AccountID Int not null,
	ReviewID Int not null,
	DateAdded Date not null default GETDATE(),
);
GO

/* Fourth step: add primary keys*/
-- Book
ALTER TABLE Book ADD PRIMARY KEY (BookID)
GO 

-- Editor
ALTER TABLE Editor ADD PRIMARY KEY (EditorID)
GO

-- Category
ALTER TABLE Category ADD PRIMARY KEY (CategoryID)
GO

-- SubCategory
ALTER TABLE SubCategory ADD PRIMARY KEY (SubCategoryID)
GO

-- Review
ALTER TABLE Review ADD PRIMARY KEY (ReviewID)
GO

-- Comment
ALTER TABLE Comment ADD PRIMARY KEY (CommentID)
GO

ALTER TABLE UserAccount ADD PRIMARY KEY (AccountID)
GO

/* Fifth step: add foreign keys*/
ALTER TABLE Book ADD CONSTRAINT FKBookEditor FOREIGN KEY (EditorID) REFERENCES Editor(EditorID);
ALTER TABLE Book ADD CONSTRAINT FKBookCategory FOREIGN KEY (CategoryID) REFERENCES Category(CategoryID);
--ALTER TABLE Book ADD CONSTRAINT FKBookUser FOREIGN KEY (UserID) REFERENCES Users(UserID);
GO

ALTER TABLE Review ADD CONSTRAINT FKReviewBook FOREIGN KEY (BookID) REFERENCES Book(BookID);
ALTER TABLE Review ADD CONSTRAINT FKReviewUser FOREIGN KEY (AccountID) REFERENCES UserAccount(AccountID);
GO

ALTER TABLE Comment ADD CONSTRAINT FKCommentUser FOREIGN KEY (AccountID) REFERENCES UserAccount(AccountID);
ALTER TABLE Comment ADD CONSTRAINT FKCommentReview FOREIGN KEY (ReviewID) REFERENCES Review(ReviewID);
GO

ALTER TABLE SubCategory ADD CONSTRAINT FKSubCategoryCategory FOREIGN KEY (CategoryID) REFERENCES Category(CategoryID);
GO

--ALTER TABLE UserAccount ADD CONSTRAINT FKAccountUser FOREIGN KEY (UserID) REFERENCES Users(UserID);
--GO

ALTER TABLE BookByUser ADD CONSTRAINT FKBookToUser FOREIGN KEY (BookID) REFERENCES Book(BookID);
--ALTER TABLE BookByUser ADD CONSTRAINT FKUserToBook FOREIGN KEY (UserID) REFERENCES Users(UserID);
GO
